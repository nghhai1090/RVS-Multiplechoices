
public class FirstKap extends Kapitel {

	public FirstKap(boolean s) {
		super(s);
        Inhalt i = new Inhalt ("Struktur des Internet","Struktur Internet","T");
        i.addAnswer("EndSysteme");
        i.addAnswer("Übertragungsmedien");
        i.addAnswer("Kernetz(Verbundene Router, Netz von Netz)");
        i.addWrong("WebBrowser");
        i.addWrong("Chrome");
        i.addWrong("just me and my PC");
        addInhalt(i);
        Inhalt i1 = new Inhalt ("was ist RFC ?","RFC Bedeutung","T");
        i1.addAnswer("Request For Comments");
        i1.addWrong("Request For Cunts");
        i1.addWrong("Remote Function Call");
        i1.addWrong("Real Fucking Code");
        addInhalt(i1);
        Inhalt i2 = new Inhalt ("was ist IETF","IETF Bedeutung","T");
        i2.addAnswer("Internet Engineering Task Force");
        i2.addWrong("I Eat Three Flowers");
        addInhalt(i2);
        Inhalt i3 = new Inhalt("EndSysteme","EndSysteme","T");
        i3.addAnswer("beherbergen Apps und Server Programme");
        i3.addAnswer("sind Endpunkte der Verbindung");
        i3.addAnswer("beispiel Mail Server, Web Server, your Laptop, your Smartphone...");
        i3.addAnswer("ist auch als Host genannt");
        i3.addWrong("ist nicht Host");
        i3.addWrong("ist nur Servers");
        i3.addWrong("ist nur Clients");
        addInhalt(i3);
        Inhalt i4= new Inhalt("Client - Server Modell","C-S-Modell","T");
        i4.addAnswer("Client stellt Anfragen und erhält Service von Server");
        i4.addAnswer("Server muss immer verfügbar");
        i4.addAnswer("Bsp : Mail, Webseite,....");
        i4.addWrong("Host ist Client wenn er Anfrage stellt, wenn er Anfragen beantwortet ist er aber Server ");
        i4.addWrong("ist wie P2P");
        addInhalt(i4);
        Inhalt i5 = new Inhalt("Peer to Peer","P2p Modell","T");
        i5.addAnswer(" beide Partner sind Client/Server");
        i5.addAnswer("keine dedizierten Server");
        i5.addAnswer("Bsp: Torenz, Skype");
        i5.addWrong("Client stellt Anfragen und erhält Service von Server");
        i5.addWrong("Bsp : Mail, Webseite,....");
        addInhalt(i5);
        Inhalt i6 = new Inhalt("Beschreibung von Dienst","Dienst Beschreibung","T");
        i6.addAnswer("Zentrale Idee zur Nutzung von Resourcen in Rechnernetzen");
        i6.addAnswer("Es gibt Dienstnehmer und Dienst Anbieter");
        i6.addWrong("Anfragen von Clients zu Server");
        i6.addWrong("Service von Server");
        addInhalt(i6);
        Inhalt i7 = new Inhalt("welche Arte von Dienste gibt es ?","Dienst Arte","T");
        i7.addAnswer("bestätigte Dienst");
        i7.addAnswer("unbestätigte Dienst");
        i7.addWrong("normale Dienst");
        i7.addWrong("Besondere Dienst");
        i7.addWrong("Server Dienst");
        i7.addWrong("Client Dienst");
        addInhalt(i7);
        Inhalt i8= new Inhalt("Unicast","Unicast","T");
        i8.addAnswer("2 Partner Kommunication");
        i8.addWrong("Kommunikation an alle in eine Gruppe");
        i8.addWrong("Kommunikation an alle");
        addInhalt(i8);
        Inhalt i9= new Inhalt("Boardcast","Boardcast","T");
        i9.addWrong("2 Partner Kommunication");
        i9.addAnswer("Kommunikation an alle in eine Gruppe");
        i9.addWrong("Kommunikation an alle");
        addInhalt(i9);
        Inhalt i10= new Inhalt("Multicast","Multicast","T");
        i10.addWrong("2 Partner Kommunication");
        i10.addWrong("Kommunikation an alle in eine Gruppe");
        i10.addAnswer("Kommunikation an alle");
        addInhalt(i10);
        Inhalt i11 = new Inhalt("Kommunikation ohne Kontext","Kommunikation ohne Kontext","T");
        i11.addAnswer("Dienst enthält alle benötigten Info (wie Brief, Datagram, UDP Datagram)");
        i11.addWrong("3 Schritte : Verbindung aufgebaut , Nachrichten austauchst, Verbindung abgebaut");
        addInhalt(i11);
        Inhalt i12 = new Inhalt("Kommunikation im Kontext","Kommunikation im Kontext","T");
        i12.addWrong("Dienst enthält alle benötigten Info (wie Brief, Datagram, UDP Datagram)");
        i12.addAnswer("3 Schritte : Verbindung aufgebaut , Nachrichten austauchst, Verbindung abgebaut");
        addInhalt(i12);
        Inhalt i13 = new Inhalt("Simplex","Simplex","T");
        i13.addAnswer("Kommunikation eine Seite wie Feuermelder, Sensoren");
        i13.addWrong("Kommunikation 2 Seite miteinander wie Telefon");
        i13.addWrong("Kommunikation 2 Seite miteinander aber wechseln wie Wechselsprechanlage");
        addInhalt(i13);
        Inhalt i14 = new Inhalt("Duplex","Duplex","T");
        i14.addWrong("Kommunikation eine Seite wie Feuermelder, Sensoren");
        i14.addAnswer("Kommunikation 2 Seite miteinander wie Telefon");
        i14.addWrong("Kommunikation 2 Seite miteinander aber wechseln wie Wechselsprechanlage");
        addInhalt(i14);
        Inhalt i15 = new Inhalt("Halbduplex","Halbduplex","T");
        i15.addWrong("Kommunikation eine Seite wie Feuermelder, Sensoren");
        i15.addWrong("Kommunikation 2 Seite miteinander wie Telefon");
        i15.addAnswer("Kommunikation 2 Seite miteinander aber wechseln wie Wechselsprechanlage");
        addInhalt(i15);
        Inhalt i16= new Inhalt("was ist Instanzen in Dienstleitende Systeme","Instanzen","T");
        i16.addAnswer("Menge von Dienstnehmer und Diensterbringer");
        i16.addWrong("Nachrichten");
        i16.addWrong("Verbindungen");
        addInhalt(i16);
        Inhalt i17= new Inhalt("Qualität von Kommunikationdienst","Qualität von Kommunikationdienst","T");
        i17.addAnswer("Leistung : Laufzeit, Verzögerung, Durchsatz, Entfernung");
        i17.addAnswer("Zuverlässigkeit : Verfügbarkeit, Fehler, Verlust, Verfalschung, Vertauschung");
        i17.addAnswer("Kosten : Grundkosten, Dienstleistungkosten");
        i17.addAnswer("Datensicherheit : Verfalschung, Vertraulichkeit, Zurechnenbarkeit");
        addInhalt(i17);
        Inhalt i18 = new Inhalt("Fehlerarten bei Kommunikation","Fehlerarten","T");
        i18.addAnswer("Verlust : lost");
        i18.addAnswer("Verfälschung : wrong address");
        i18.addAnswer("Vertauschung : address wechseln");
        i18.addAnswer("Phantom : no Quelle");
        i18.addAnswer("Duplikat : douple");
        i18.addWrong("Verlust : wrong address");
        i18.addWrong("Verfälschung : address wechseln");
        i18.addWrong("Vertauschung : wrong adress");
        i18.addWrong("Phantom : lost");
        addInhalt(i18);
        Inhalt i19 = new Inhalt("Protokoll","Protokoll","T");
        i19.addAnswer("Menge von Regeln und Formaten, die das Kommunikation von Instanzen zur Ausführung von Funktionen regelt (ISO 7498)");
        i19.addWrong("Menge von Regeln und Formaten, die das Kommunikation von Instanzen zur Ausführung von Funktionen regelt (ISO 7994)");
        i19.addWrong("Menge von Regeln und Formaten, die das Kommunikation von Instanzen zur Ausführung von Funktionen regelt (ISO 9001)");
        i19.addWrong("Menge von Regeln und Formaten, die das Kommunikation von Instanzen zur Ausführung von Funktionen regelt (ISO 7488)");
        i19.addWrong("Menge von Programmiersprache, die zur Ausführung des Servers oder bauen einer Webseite genutzt werden");
        i19.addWrong("Dienste von Servern");
        addInhalt(i19);
        Inhalt i20= new Inhalt("Proprietäre Protokolle","Proprietäre Protokolle","T");
        i20.addAnswer("Kommt in Homogene Systeme");
        i20.addWrong("Industriestandard, die durch vielfache Nutzung zur Standard werden, Schnittstellen muss offen gelegt werden");
        i20.addWrong("durch Internationale Standardisierungsorganisation festgelegt");
        addInhalt(i20);
        Inhalt i21= new Inhalt("De facto Standard","De facto Standard","T");
        i21.addWrong("Kommt in Homogene Systeme");
        i21.addAnswer("Industriestandard, die durch vielfache Nutzung zur Standard werden, Schnittstellen muss offen gelegt werden");
        i21.addWrong("durch Internationale Standardisierungsorganisation festgelegt");
        addInhalt(i21);
        Inhalt i22= new Inhalt("Offizielle Standard","Offizielle Standard","T");
        i22.addWrong("Kommt in Homogene Systeme");
        i22.addWrong("Industriestandard, die durch vielfache Nutzung zur Standard werden, Schnittstellen muss offen gelegt werden");
        i22.addAnswer("durch Internationale Standardisierungsorganisation festgelegt");
        addInhalt(i22);
        Inhalt i23 = new Inhalt("Teile in Kommunikationprotokoll","Kommuniktionprotokoll","T");
        i23.addAnswer("Instanz");
        i23.addAnswer("Zielkommunikationdienst");
        i23.addAnswer("Basisdienst");
        i23.addAnswer("PDU Formate");
        i23.addAnswer("Dienstzugangpunkte");
        addInhalt(i23);
        Inhalt i24 = new Inhalt("was ist Dienstzugangpunkte","Dienstzugangpunkt","T"); 
        i24.addAnswer("Schnittstelle zwischen Instanz der ZielKommunikationdienst und BasisKommunikationdienst");
        i24.addWrong("Port");
        i24.addWrong("Schnittstelle zwischen Instanz der ZielKommunikationdienst in Kommunikation miteinander");
        addInhalt(i24);
        Inhalt i25=new Inhalt("wie verhalten Instanzen in Kommunikationprotokoll ?","Kommunizierverhalten von Instanzen in Kommunikationprotokoll","T");
        i25.addAnswer("nutzen Basis-Kommunikationdienst um Ziel-Kommunikationdienst zu erbringen");
        i25.addWrong("nutzen Ziel-Kommunikationdienst um Basis-Kommunikationdienst zu erbringen");
        addInhalt(i25);
        Inhalt i26= new Inhalt("ISO/OSI","Begriff ISO/OSI","T");
        i26.addAnswer("Kommunikation offener systeme basis referenz modell");
        i26.addAnswer("allgemeines modell, das sich auf die logische Architektur konzentriert");
        i26.addAnswer("Anwendung, Darstellung, Sitzung, Transport, Vermittlung, Sicherung, Bitübertragung ");
        i26.addAnswer("Basiert auf ISO 7498");
        i26.addAnswer("hat 7 Schichten");
        i26.addWrong("Internet Protokollstack");
        i26.addWrong("Für alle Systeme implementiert");
        i26.addWrong("Basiert auf RFCs, IEEE Normen");
        i26.addWrong("hat 5 Schichten");
        addInhalt(i26);
        Inhalt i27= new Inhalt("TCP/IP","Begriff TCP/IP","T");
        i27.addWrong("Kommunikation offener systeme basis referenz modell");
        i27.addWrong("allgemeines modell, das sich auf die logische Architektur konzentriert");
        i27.addWrong("Basiert auf ISO 7498");
        i27.addWrong("hat 7 Schichten");
        i27.addAnswer("Internet Protokollstack");
        i27.addAnswer("Für alle Systeme implementiert");
        i27.addAnswer("Basiert auf RFCs, IEEE Normen");
        i27.addAnswer("hat 5 Schichten");
        i27.addAnswer("Anwendung, Transport, Vermittlung, Sicherung, Bitübertragung ");
        addInhalt(i27);
        Inhalt i28= new Inhalt("Schichten des ISO/OSI Modell in Reihenfolge","Schichten des ISO/OSI Modell","T");
        i28.addAnswer("Anwendung, Darstellung, Sitzung, Transport, Vermittlung, Sicherung, Bitübertragung ");
        i28.addWrong("Darstellung, Anwendung, Sitzung, Transport, Sicherung, Vermittlung, Bitübertragung ");
        i28.addWrong("Sitzung, Transport, Sicherung, Darstellung, Anwendung, Bitübertragung, Vermittlung ");
        i28.addWrong(" Anwendung, Transport, Sicherung, Vermittlung, Bitübertragung ");
        i28.addWrong(" Transport, Sicherung, Anwendung, Bitübertragung, Vermittlung ");
        i28.addWrong("Anwendung, Transport, Sicherung, Vermittlung, Bitübertragung ");
        i28.addWrong("Anwendung, Darstellung, Sitzung, Transport, Sicherung, Vermittlung, Bitübertragung ");
        i28.addWrong("Anwendung, Transport, Vermittlung, Sicherung, Bitübertragung ");
        addInhalt(i28);
        Inhalt i29= new Inhalt("Schichten des TCP/IP Modell in Reihenfolge","Schichten des TCP/IP Modell","T");
        i29.addWrong("Anwendung, Darstellung, Sitzung, Transport, Vermittlung, Sicherung, Bitübertragung ");
        i29.addWrong("Anwendung, Darstellung, Sitzung, Transport, Sicherung, Vermittlung, Bitübertragung ");
        i29.addWrong("Darstellung, Anwendung, Sitzung, Transport, Sicherung, Vermittlung, Bitübertragung ");
        i29.addWrong("Sitzung, Transport, Sicherung, Darstellung, Anwendung, Bitübertragung, Vermittlung ");
        i29.addWrong(" Anwendung, Transport, Sicherung, Vermittlung, Bitübertragung ");
        i29.addWrong(" Transport, Sicherung, Anwendung, Bitübertragung, Vermittlung ");
        i29.addWrong("Anwendung, Transport, Sicherung, Vermittlung, Bitübertragung ");
        i29.addAnswer("Anwendung, Transport, Vermittlung, Sicherung, Bitübertragung ");
        addInhalt(i29);
        Inhalt i30 = new Inhalt("Leitungsvermittlung","Leitungsvermittlung","T");
        i30.addAnswer("pro Verbindung eine Leitung");
        i30.addAnswer("Resourcen für Verbindung werden end to end reserviert");
        i30.addAnswer("keine Nutzungskonkurenz durch andere Verbindungen");
        i30.addAnswer("von der Leitung abhängige aber garantierte Leistung");
        i30.addAnswer("zustand der Verbindung an jedem Transferknoten gespeichert");
        i30.addAnswer("Netz Resourcen wird aufgeteilt und die teile werden einzelnen Verbindungen zugeteilt, unbenutzter Teil wird nicht durch andere Verbindungen genutzt");
        i30.addAnswer("Bsp: telefon, Video Konferenz");
        i30.addAnswer("Ideal für zeitkritische Anwendungen");
        i30.addAnswer("Verschwendung von Resourcen möglich");
        i30.addAnswer("Aufteilung durch Frequenzmultiplexing (FDMA) oder Zeitmultiplexing (TDMA)");
        i30.addWrong("Daten in Packete teilen , Packet nutzt volle Bandbreite");
        i30.addWrong("keine garantierte Bandbreite für Datenstrom");
        i30.addWrong("efferziente Nutzung der vorhandene Resourcen");
        i30.addWrong("Ideal für nicht zeitkritische Anwendungen");
        i30.addWrong("Überlastung möglich");
        i30.addWrong("Bsp World Wide Web");
        addInhalt(i30);
        Inhalt i31 = new Inhalt("Packetsvermittlung","Packetsvermittlung","T");
        i31.addWrong("pro Verbindung eine Leitung");
        i31.addWrong("Ideal für zeitkritische Anwendungen");
        i31.addWrong("Verschwendung von Resourcen möglich");
        i31.addWrong("Resourcen für Verbindung werden end to end reserviert");
        i31.addWrong("keine Nutzungskonkurenz durch andere Verbindungen");
        i31.addWrong("von der Leitung abhängige aber garantierte Leistung");
        i31.addWrong("zustand der Verbindung an jedem Transferknoten gespeichert");
        i31.addWrong("Netz Resourcen wird aufgeteilt und die teile werden einzelnen Verbindungen zugeteilt, unbenutzter Teil wird durch andere Verbindungen genutzt");
        i31.addWrong("Netz Resourcen wird aufgeteilt und die teile werden einzelnen Verbindungen zugeteilt, unbenutzter Teil wird nicht durch andere Verbindungen genutzt");
        i31.addWrong("Aufteilung durch Frequenzmultiplexing (FDMA) oder Zeitmultiplexing (TDMA)");
        i31.addAnswer("Multiplexing (Statisch)");
        i31.addAnswer("efferziente Nutzung der vorhandene Resourcen");
        i31.addAnswer("Überlastung möglich");
        i31.addAnswer("Wartenschlagen Aufenhalt");
        i31.addAnswer("Übertragungsverzögerung (Packetlänge und Übertragungsrate)");
        i31.addAnswer("Bsp World Wide Web");
        i31.addAnswer("Ideal für nicht zeitkritische Anwendungen");
        i31.addAnswer("Daten in Packete teilen , Packet nutzt volle Bandbreite");
        i31.addAnswer("keine garantierte Bandbreite für Datenstrom");
        i31.addAnswer("Packete im Puffer wartet auf freie Resourcen (Store and Foward Prinzip)");
        addInhalt(i31);
        Inhalt i33= new Inhalt("Verzögerungzeiten bei der Übertragung zwischen Knoten","Verzögerung bei Übertragung","T");
        i33.addAnswer("Knoten Vearbeitung");
        i33.addAnswer("Wartenschlagen Aufenhalt");
        i33.addAnswer("Übertragungsverzögerung (Packetlänge und Übertragungsrate)");
        i33.addAnswer("Signalverzögerung (Ausbreitungsgeschwindigkeit der Signale in Medium)");
        i33.addAnswer("Ende zu Ende Verzögerung");
        addInhalt(i33);
        Inhalt i34= new Inhalt("Grunde von Verlüsten und Verfälschungen von Paketen","Grunde von Verlüsten und Verfälschungen von Paketen","T");
        i34.addAnswer("Pufferüberläufe");
        i34.addAnswer("Ausfall von komponenten");
        i34.addAnswer("Übertragungsfehler");
        i34.addAnswer("Absichtliche Verfälschungen");
        addInhalt(i34);
        Inhalt i35 = new Inhalt("was ist ISP","ISP","T");
        i35.addAnswer("Internet Service Provider");
        i35.addWrong("Internet Server Provider");
        i35.addWrong("Internet Service Points");
        addInhalt(i35);
        Inhalt i36 = new Inhalt("Routing in Datagramm-Netz","Datagramm-Netz","T");
        i36.addAnswer("Ziel Adresse bestimmt den nächsten Hop");
        i36.addAnswer("Verschiedene Pakete desselben Datenstroms können unterschiedliche Wege nehmen");
        i36.addWrong("jedes Pakete hat eine Tag, die den nächsten Hop bestimmt");
        i36.addWrong("Pfad wird beim Verbindungsaufbau festgelegt und Router speichern Verbindungsdaten");
        addInhalt(i36);
        Inhalt i37 = new Inhalt("Routing in Virtual Circuit-Netz","Virtual Circuit-Netz","T");
        i37.addWrong("Ziel Adresse bestimmt den nächsten Hop");
        i37.addWrong("Verschiedene Pakete desselben Datenstroms können unterschiedliche Wege nehmen");
        i37.addAnswer("jedes Pakete hat einen Tag, die den nächsten Hop bestimmt");
        i37.addAnswer("Pfad wird beim Verbindungsaufbau festgelegt und Router speichern Verbindungsdaten");
        addInhalt(i37);
        Inhalt i38 = new Inhalt("TCP","TCP","T");
        i38.addAnswer("Verbindungsorientiert");
        i38.addAnswer("Handshaking bei Verbindungaufbau");
        i38.addAnswer("Zuverlässige Datentransfer in richtige Reihenfolge, Pakete nummerierung und Emfangbestätigung für Pakete");
        i38.addAnswer("Flusskontrolle");
        i38.addAnswer("Überlastkontrolle (Vermeidung von Staus)");
        i38.addAnswer("RFC793");
        i38.addWrong("RFC768");
        i38.addWrong("Verbindungslos");
        i38.addWrong("kein Handshaking, zustandlos, separate Übertragung einzelne Pakete");
        i38.addWrong("Unzuverlässige Datentransfer");
        i38.addWrong("keine Flusskontrolle");
        i38.addWrong("keine Überlastkontrolle");
        i38.addWrong("Daten Pakete können verloren gehen");
        addInhalt(i38);
        Inhalt i39 = new Inhalt("UDP","UDP","T");
        i39.addWrong("Verbindungsorientiert");
        i39.addWrong("Handshaking bei Verbindungaufbau");
        i39.addWrong("Zuverlässige Datentransfer in richtige Reihenfolge,  Pakete nummerierung und Emfangbestätigung für Pakete");
        i39.addWrong("Flusskontrolle");
        i39.addWrong("Überlastkontrolle (Vermeidung von Staus)");
        i39.addWrong("RFC793");
        i39.addAnswer("RFC768");
        i39.addAnswer("Verbindungslos");
        i39.addAnswer("kein Handshaking, zustandlos, separate Übertragung einzelne Pakete");
        i39.addAnswer("Unzuverlässige Datentransfer");
        i39.addAnswer("keine Flusskontrolle");
        i39.addAnswer("keine Überlastkontrolle");
        i39.addAnswer("Daten Pakete können verloren gehen");
        addInhalt(i39);
        Inhalt i40= new Inhalt("was ist Dienst","Dienst","T");
        i40.addAnswer("Funktionen und Fähigkeiten einer Schicht werden als Dienst der nächshöheren Schicht angeboten");
        i40.addWrong("Zusammenfassung von Probleme und Aufgaben");
        addInhalt(i40);
        Inhalt i41= new Inhalt("was ist Schicht","Schicht","T");
        i41.addAnswer("Zusammenfassung von Probleme und Aufgaben");
        i41.addAnswer("Schichten können getrennt voneinander entwickelt werden");
        i41.addAnswer("Kommunikation nur mit benachbarter Schicht");
        i41.addAnswer("Bietet nächsthöhere Schicht Funktionen einen dienstes an");
        addInhalt(i41);
        Inhalt i42= new Inhalt("Warum FDMA nicht in praktisch umsetzbar","FDMA","T");
        i42.addAnswer("Physikalische Limits (mehr Teilnehmer -> höhere Trägerfrequenz-> Höhere Energiekosten)");
        i42.addWrong("Warte Zeiten (mehr Teilnehmer -> mehr Zeitslots der Länge n -> Zeit wischen 2 Übertragungen einer Verbindung wird grösser)");
        i42.addWrong("TDMA ist besser");
        addInhalt(i42);
        Inhalt i43= new Inhalt("Warum TDMA nicht in praktisch umsetzbar","TDMA","T");
        i43.addWrong("Physikalische Limits (mehr Teilnehmer -> höhere Trägerfrequenz-> Höhere Energiekosten)");
        i43.addAnswer("Warte Zeiten (mehr Teilnehmer -> mehr Zeitslots der Länge n -> Zeit wischen 2 Übertragungen einer Verbindung wird grösser)");
        i43.addWrong("FDMA ist besser");
        addInhalt(i43);
        Inhalt i44= new Inhalt("Was ist multiplexing(Wahlt der Satz der am richtigsten ist )","Multiplexing","T");
        i44.addAnswer("Benutzung eine Verbindungsleitung durch mehrere Verbindungen, indem Netz Resourcen aufgeteilt wird, einzelne Teile werden dann einzelnen Verbindungen zugeteilt, Mitbenutzung unbenutzte Teile durch andere Verbindungen ist ausgeschlossen");
        addInhalt(i44);
        Inhalt i45= new Inhalt("Übertragungsverzögerung (d trans)","d trans","T");
        i45.addAnswer("=L(Bits)/R(bsp)");
        i45.addWrong("=R(bsp)/L(Bits)");
        i45.addWrong("=s(Strecke)/v(Geschwindigkeit)");
        i45.addWrong("=v(Geschwindigkeit)/s(Strecke)");
        i45.addWrong("=d trans + d prop");
        addInhalt(i45);
        Inhalt i46= new Inhalt("Ausbreitungsverzögerung (d prop)","d prop","T");
        i46.addWrong("=L(Bits)/R(bsp)");
        i46.addWrong("=R(bsp)/L(Bits)");
        i46.addAnswer("=s(Strecke)/v(Geschwindigkeit)");
        i46.addWrong("=v(Geschwindigkeit)/s(Strecke)");
        i46.addWrong("=d trans + d prop");
        addInhalt(i46);
        Inhalt i47= new Inhalt("Ende zu Ende -verzögerung (d ende zu ende)","d ende zu ende","T");
        i47.addWrong("=L(Bits)/R(bsp)");
        i47.addWrong("=R(bsp)/L(Bits)");
        i47.addWrong("=s(Strecke)/v(Geschwindigkeit)");
        i47.addWrong("=v(Geschwindigkeit)/s(Strecke)");
        i47.addAnswer("=d trans + d prop");
        addInhalt(i47);
        Inhalt i48= new Inhalt("wo ist das letzte Bit des Pakets zum Zeitpunkt t = d trans wenn sender beginnt datenübertragung zum Zeitpunkt t = 0","Übung 2 aufgabe ","T");
        i48.addAnswer("anfang der Leitung");
        i48.addWrong("Mitte der Leitung");
        i48.addWrong("Ende der Leitung (Angekommen)");
        addInhalt(i48);
        Inhalt i49= new Inhalt("wo ist das erste Bit des Pakets zum Zeitpunkt t = d trans  wenn d prop > d trans","Übung 2 aufgabe ","T");
        i49.addWrong("anfang der Leitung");
        i49.addAnswer("Mitte der Leitung");
        i49.addWrong("Ende der Leitung (Angekommen)");
        addInhalt(i49);
        Inhalt i50= new Inhalt("wo ist das erste Bit des Pakets zum Zeitpunkt t = d trans  wenn d prop < d trans","Übung 2 aufgabe ","T");
        i50.addWrong("anfang der Leitung");
        i50.addWrong("Mitte der Leitung");
        i50.addAnswer("Ende der Leitung (Angekommen)");
        addInhalt(i50);
        addAnswer("COW");
        addAnswer("BULL");
        addAnswer("DOG");
        addAnswer("TIGER");
        addAnswer("CAT");
        addAnswer("MOUSE");
        addAnswer("BUGS");
        addAnswer("WRONG ANSWER");
        addAnswer("THIS ONE IS WRONG ANSWER");
        addAnswer("RIGHT ANSWER");
        addAnswer("RIGHT ANSWER HERE");
        addAnswer("Cmon");
        addAnswer("R YOU FEELING LUCKY ?");
        setFrage(); 
    }
}
